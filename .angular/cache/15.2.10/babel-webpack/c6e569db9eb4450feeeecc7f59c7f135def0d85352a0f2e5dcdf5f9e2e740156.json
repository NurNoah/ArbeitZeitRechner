{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(ds) {\n    this.ds = ds;\n  }\n  berechne(kommzeit, pausezeit) {\n    let splitS;\n    let kommzeitSTD = 0;\n    let kommzeitMIN = 0;\n    let pausezeitnum = 0;\n    let labelergebnis = document.getElementById('ergblable');\n    splitS = kommzeit.split(':');\n    kommzeitSTD = parseInt(splitS[0]);\n    if (splitS[1] == '' || splitS[1] == null) {\n      kommzeitMIN = 0;\n    } else {\n      kommzeitMIN = parseInt(splitS[1]);\n    }\n    pausezeitnum = parseInt(pausezeit);\n    if (isNaN(pausezeitnum) || isNaN(kommzeitSTD) || isNaN(kommzeitMIN)) {\n      labelergebnis.textContent = 'Gebe zahl an';\n    } else {\n      if (pausezeitnum < 0 || kommzeitSTD < 0 || kommzeitMIN < 0 || kommzeitSTD > 23 || kommzeitMIN >= 60) {\n        labelergebnis.textContent = 'Ungültige Zahl';\n      } else {\n        let ergebnisSTD = kommzeitSTD + 7;\n        let ergebnisMIN = kommzeitMIN + 42 + pausezeitnum;\n        if (ergebnisMIN >= 0) {\n          ergebnisSTD += ergebnisMIN / 60;\n          ergebnisMIN = ergebnisMIN % 60;\n        }\n        if (ergebnisSTD >= 24) {\n          ergebnisSTD -= 24;\n        }\n        labelergebnis.textContent = Math.floor(ergebnisSTD) + ':' + ergebnisMIN;\n      }\n    }\n  }\n  onKeyUp(event, kommzeit, pausezeit) {\n    if (event.key == 'Enter') {\n      this.berechne(kommzeit, pausezeit);\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAExBC,YAAmBC,EAA0B;IAA1B,OAAE,GAAFA,EAAE;EAA2B;EAEhDC,QAAQ,CAACC,QAAgB,EAAEC,SAAiB;IAE1C,IAAIC,MAAgB;IACpB,IAAIC,WAAW,GAAW,CAAC;IAC3B,IAAIC,WAAW,GAAW,CAAC;IAC3B,IAAIC,YAAY,GAAW,CAAC;IAC5B,IAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CACzC,WAAW,CACQ;IAErBN,MAAM,GAAGF,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC;IAE5BN,WAAW,GAAGO,QAAQ,CAACR,MAAM,CAAC,CAAC,CAAC,CAAC;IAEjC,IAAIA,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,IAAIA,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;MACxCE,WAAW,GAAG,CAAC;KAChB,MAAM;MACLA,WAAW,GAAGM,QAAQ,CAACR,MAAM,CAAC,CAAC,CAAC,CAAC;;IAEnCG,YAAY,GAAGK,QAAQ,CAACT,SAAS,CAAC;IAElC,IAAIU,KAAK,CAACN,YAAY,CAAC,IAAIM,KAAK,CAACR,WAAW,CAAC,IAAIQ,KAAK,CAACP,WAAW,CAAC,EAAE;MACnEE,aAAa,CAACM,WAAW,GAAG,cAAc;KAC3C,MAAM;MACL,IACEP,YAAY,GAAG,CAAC,IAChBF,WAAW,GAAG,CAAC,IACfC,WAAW,GAAG,CAAC,IACfD,WAAW,GAAG,EAAE,IAChBC,WAAW,IAAI,EAAE,EACjB;QACAE,aAAa,CAACM,WAAW,GAAG,gBAAgB;OAC7C,MAAM;QAEL,IAAIC,WAAW,GAAWV,WAAW,GAAG,CAAC;QACzC,IAAIW,WAAW,GAAWV,WAAW,GAAG,EAAE,GAAGC,YAAY;QAEzD,IAAIS,WAAW,IAAI,CAAC,EAAE;UACpBD,WAAW,IAAIC,WAAW,GAAG,EAAE;UAC/BA,WAAW,GAAGA,WAAW,GAAG,EAAE;;QAGhC,IAAID,WAAW,IAAI,EAAE,EAAE;UACrBA,WAAW,IAAI,EAAE;;QAGnBP,aAAa,CAACM,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC,GAAG,GAAG,GAAGC,WAAW;;;EAG7E;EAEAG,OAAO,CAACC,KAAoB,EAAElB,QAAgB,EAAEC,SAAiB;IAC/D,IAAIiB,KAAK,CAACC,GAAG,IAAI,OAAO,EAAE;MACxB,IAAI,CAACpB,QAAQ,CAACC,QAAQ,EAAEC,SAAS,CAAC;;EAEtC;CAED;AA7DYL,aAAa,eANzBD,SAAS,CAAC;EACTyB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GAEW1B,aAAa,CA6DzB;SA7DYA,aAAa","names":["Component","HomeComponent","constructor","ds","berechne","kommzeit","pausezeit","splitS","kommzeitSTD","kommzeitMIN","pausezeitnum","labelergebnis","document","getElementById","split","parseInt","isNaN","textContent","ergebnisSTD","ergebnisMIN","Math","floor","onKeyUp","event","key","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\Code\\Angula\\ZeitRechnerClean\\ZeitRechnerClean\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { isEmpty } from 'rxjs';\nimport { DarkmodeserviceService } from '../darkmodeservice.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\n\nexport class HomeComponent {\n\n  constructor(public ds: DarkmodeserviceService) {}\n\n  berechne(kommzeit: string, pausezeit: string) {\n\n    let splitS: string[];\n    let kommzeitSTD: number = 0;\n    let kommzeitMIN: number = 0;\n    let pausezeitnum: number = 0;\n    let labelergebnis = document.getElementById(\n      'ergblable'\n    ) as HTMLLabelElement;\n\n    splitS = kommzeit.split(':');\n\n    kommzeitSTD = parseInt(splitS[0]);\n\n    if (splitS[1] == '' || splitS[1] == null) {\n      kommzeitMIN = 0;\n    } else {\n      kommzeitMIN = parseInt(splitS[1]);\n    }\n    pausezeitnum = parseInt(pausezeit);\n\n    if (isNaN(pausezeitnum) || isNaN(kommzeitSTD) || isNaN(kommzeitMIN)) {\n      labelergebnis.textContent = 'Gebe zahl an';\n    } else {\n      if (\n        pausezeitnum < 0 ||\n        kommzeitSTD < 0 ||\n        kommzeitMIN < 0 ||\n        kommzeitSTD > 23 ||\n        kommzeitMIN >= 60\n      ) {\n        labelergebnis.textContent = 'Ungültige Zahl';\n      } else {\n        \n        let ergebnisSTD: number = kommzeitSTD + 7;\n        let ergebnisMIN: number = kommzeitMIN + 42 + pausezeitnum;\n\n        if (ergebnisMIN >= 0) {\n          ergebnisSTD += ergebnisMIN / 60;\n          ergebnisMIN = ergebnisMIN % 60;\n        }\n\n        if (ergebnisSTD >= 24) {\n          ergebnisSTD -= 24;\n        }\n\n        labelergebnis.textContent = Math.floor(ergebnisSTD) + ':' + ergebnisMIN;\n      }\n    }\n  }\n\n  onKeyUp(event: KeyboardEvent, kommzeit: string, pausezeit: string): void {\n    if (event.key == 'Enter') {\n      this.berechne(kommzeit, pausezeit);\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}