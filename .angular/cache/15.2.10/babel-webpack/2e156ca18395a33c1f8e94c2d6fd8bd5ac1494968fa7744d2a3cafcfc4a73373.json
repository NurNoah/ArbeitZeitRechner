{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../darkmodeservice.service\";\nexport class HomeComponent {\n  constructor(ds) {\n    this.ds = ds;\n  }\n  berechne(kommzeit, pausezeit) {\n    let splitS;\n    let kommzeitSTD = 0;\n    let kommzeitMIN = 0;\n    let pausezeitnum = 0;\n    let labelergebnis = document.getElementById('ergblable');\n    splitS = kommzeit.split(':');\n    kommzeitSTD = parseInt(splitS[0]);\n    if (splitS[1] == '' || splitS[1] == null) {\n      kommzeitMIN = 0;\n    } else {\n      kommzeitMIN = parseInt(splitS[1]);\n    }\n    pausezeitnum = parseInt(pausezeit);\n    if (isNaN(pausezeitnum) || isNaN(kommzeitSTD) || isNaN(kommzeitMIN)) {\n      labelergebnis.textContent = 'Gebe zahl an';\n    } else {\n      if (pausezeitnum < 0 || kommzeitSTD < 0 || kommzeitMIN < 0 || kommzeitSTD > 23 || kommzeitMIN >= 60) {\n        labelergebnis.textContent = 'Ungültige Zahl';\n      } else {\n        let ergebnisSTD = kommzeitSTD + 7;\n        let ergebnisMIN = kommzeitMIN + 42 + pausezeitnum;\n        if (ergebnisMIN >= 0) {\n          ergebnisSTD += ergebnisMIN / 60;\n          ergebnisMIN = ergebnisMIN % 60;\n        }\n        if (ergebnisSTD >= 24) {\n          ergebnisSTD -= 24;\n        }\n        labelergebnis.textContent = Math.floor(ergebnisSTD) + ':' + ergebnisMIN;\n      }\n    }\n  }\n  onKeyUp(event, kommzeit, pausezeit) {\n    if (event.key == 'Enter') {\n      this.berechne(kommzeit, pausezeit);\n    }\n  }\n  toggleMode() {\n    this.ds.test();\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.DarkmodeserviceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 11,\n    vars: 0,\n    consts: [[\"id\", \"bdy\", 1, \"light-mode\"], [1, \"main\"], [\"type\", \"text\", \"placeholder\", \"Wann bist du Gekommen  HH:MM\", 1, \"abstand\", 3, \"keyup\"], [\"kommzeit\", \"\"], [\"type\", \"text\", \"placeholder\", \"Pausen Zeit in Minuten\", 1, \"abstand\", 3, \"keyup\"], [\"pausezeit\", \"\"], [\"id\", \"button1\", 3, \"click\", \"keyup\"], [\"id\", \"ergblable\", 1, \"abstand\"], [\"id\", \"toggleButton\", 3, \"click\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"body\", 0)(1, \"div\", 1)(2, \"input\", 2, 3);\n        i0.ɵɵlistener(\"keyup\", function HomeComponent_Template_input_keyup_2_listener($event) {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          const _r1 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.onKeyUp($event, _r0.value, _r1.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 4, 5);\n        i0.ɵɵlistener(\"keyup\", function HomeComponent_Template_input_keyup_4_listener($event) {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          const _r1 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.onKeyUp($event, _r0.value, _r1.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_6_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          const _r1 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.berechne(_r0.value, _r1.value));\n        })(\"keyup\", function HomeComponent_Template_button_keyup_6_listener($event) {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          const _r1 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.onKeyUp($event, _r0.value, _r1.value));\n        });\n        i0.ɵɵtext(7, \"Berechne\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"label\", 7);\n        i0.ɵɵelementStart(9, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_9_listener() {\n          return ctx.toggleMode();\n        });\n        i0.ɵɵtext(10, \"Toggle Mode\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 95:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Expected identifier.\\\\n   \\u2577\\\\n56 \\u2502     border: 1px solid ##4caf50;\\\\r\\\\n   \\u2502                        ^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\home\\\\\\\\home.component.scss 56:24  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[95]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n  });\n}","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,aAAa;EAExBC,YAAmBC,EAA0B;IAA1B,OAAE,GAAFA,EAAE;EAA2B;EAEhDC,QAAQ,CAACC,QAAgB,EAAEC,SAAiB;IAE1C,IAAIC,MAAgB;IACpB,IAAIC,WAAW,GAAW,CAAC;IAC3B,IAAIC,WAAW,GAAW,CAAC;IAC3B,IAAIC,YAAY,GAAW,CAAC;IAC5B,IAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CACzC,WAAW,CACQ;IAErBN,MAAM,GAAGF,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC;IAE5BN,WAAW,GAAGO,QAAQ,CAACR,MAAM,CAAC,CAAC,CAAC,CAAC;IAEjC,IAAIA,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,IAAIA,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;MACxCE,WAAW,GAAG,CAAC;KAChB,MAAM;MACLA,WAAW,GAAGM,QAAQ,CAACR,MAAM,CAAC,CAAC,CAAC,CAAC;;IAEnCG,YAAY,GAAGK,QAAQ,CAACT,SAAS,CAAC;IAElC,IAAIU,KAAK,CAACN,YAAY,CAAC,IAAIM,KAAK,CAACR,WAAW,CAAC,IAAIQ,KAAK,CAACP,WAAW,CAAC,EAAE;MACnEE,aAAa,CAACM,WAAW,GAAG,cAAc;KAC3C,MAAM;MACL,IACEP,YAAY,GAAG,CAAC,IAChBF,WAAW,GAAG,CAAC,IACfC,WAAW,GAAG,CAAC,IACfD,WAAW,GAAG,EAAE,IAChBC,WAAW,IAAI,EAAE,EACjB;QACAE,aAAa,CAACM,WAAW,GAAG,gBAAgB;OAC7C,MAAM;QAEL,IAAIC,WAAW,GAAWV,WAAW,GAAG,CAAC;QACzC,IAAIW,WAAW,GAAWV,WAAW,GAAG,EAAE,GAAGC,YAAY;QAEzD,IAAIS,WAAW,IAAI,CAAC,EAAE;UACpBD,WAAW,IAAIC,WAAW,GAAG,EAAE;UAC/BA,WAAW,GAAGA,WAAW,GAAG,EAAE;;QAGhC,IAAID,WAAW,IAAI,EAAE,EAAE;UACrBA,WAAW,IAAI,EAAE;;QAGnBP,aAAa,CAACM,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC,GAAG,GAAG,GAAGC,WAAW;;;EAG7E;EAEAG,OAAO,CAACC,KAAoB,EAAElB,QAAgB,EAAEC,SAAiB;IAC/D,IAAIiB,KAAK,CAACC,GAAG,IAAI,OAAO,EAAE;MACxB,IAAI,CAACpB,QAAQ,CAACC,QAAQ,EAAEC,SAAS,CAAC;;EAEtC;EAECmB,UAAU;IACT,IAAI,CAACtB,EAAE,CAACuB,IAAI,EAAE;EAClB;EAAC;qBA/DYzB,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAA0B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;;QCV1BC,+BAAmC;QAGqDA;UAAAA;UAAA;UAAA;UAAA,OAASA,wDAAgD;QAAA,EAAC;QAAlJA,iBAAmJ;QAEnJA,mCAA8I;QAA3DA;UAAAA;UAAA;UAAA;UAAA,OAASA,wDAAgD;QAAA,EAAC;QAA7IA,iBAA8I;QAE9IA,iCAAoI;QAA/GA;UAAAA;UAAA;UAAA;UAAA,OAASA,iDAAyC;QAAA,EAAC;UAAAA;UAAA;UAAA;UAAA,OAAUA,wDAAgD;QAAA,EAA1D;QAA4DA,wBAAQ;QAAAA,iBAAS;QAErJA,2BAA8C;QAE7CA,iCAAiD;QAAvBA;UAAA,OAASC,gBAAY;QAAA,EAAC;QAACD,4BAAW;QAAAA,iBAAS","names":["HomeComponent","constructor","ds","berechne","kommzeit","pausezeit","splitS","kommzeitSTD","kommzeitMIN","pausezeitnum","labelergebnis","document","getElementById","split","parseInt","isNaN","textContent","ergebnisSTD","ergebnisMIN","Math","floor","onKeyUp","event","key","toggleMode","test","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\Code\\Angula\\ZeitRechnerClean\\ZeitRechnerClean\\src\\app\\home\\home.component.ts","F:\\Code\\Angula\\ZeitRechnerClean\\ZeitRechnerClean\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { isEmpty } from 'rxjs';\nimport { DarkmodeserviceService } from '../darkmodeservice.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\n\nexport class HomeComponent {\n\n  constructor(public ds: DarkmodeserviceService) {}\n\n  berechne(kommzeit: string, pausezeit: string) {\n\n    let splitS: string[];\n    let kommzeitSTD: number = 0;\n    let kommzeitMIN: number = 0;\n    let pausezeitnum: number = 0;\n    let labelergebnis = document.getElementById(\n      'ergblable'\n    ) as HTMLLabelElement;\n\n    splitS = kommzeit.split(':');\n\n    kommzeitSTD = parseInt(splitS[0]);\n\n    if (splitS[1] == '' || splitS[1] == null) {\n      kommzeitMIN = 0;\n    } else {\n      kommzeitMIN = parseInt(splitS[1]);\n    }\n    pausezeitnum = parseInt(pausezeit);\n\n    if (isNaN(pausezeitnum) || isNaN(kommzeitSTD) || isNaN(kommzeitMIN)) {\n      labelergebnis.textContent = 'Gebe zahl an';\n    } else {\n      if (\n        pausezeitnum < 0 ||\n        kommzeitSTD < 0 ||\n        kommzeitMIN < 0 ||\n        kommzeitSTD > 23 ||\n        kommzeitMIN >= 60\n      ) {\n        labelergebnis.textContent = 'Ungültige Zahl';\n      } else {\n        \n        let ergebnisSTD: number = kommzeitSTD + 7;\n        let ergebnisMIN: number = kommzeitMIN + 42 + pausezeitnum;\n\n        if (ergebnisMIN >= 0) {\n          ergebnisSTD += ergebnisMIN / 60;\n          ergebnisMIN = ergebnisMIN % 60;\n        }\n\n        if (ergebnisSTD >= 24) {\n          ergebnisSTD -= 24;\n        }\n\n        labelergebnis.textContent = Math.floor(ergebnisSTD) + ':' + ergebnisMIN;\n      }\n    }\n  }\n\n  onKeyUp(event: KeyboardEvent, kommzeit: string, pausezeit: string): void {\n    if (event.key == 'Enter') {\n      this.berechne(kommzeit, pausezeit);\n    }\n  }\n\n   toggleMode(): void {\n    this.ds.test()\n}\n\n\n}\n","<body id=\"bdy\" class=\"light-mode\" >\n    \n<div class=\"main\">\n<input class=\"abstand\" type=\"text\" #kommzeit placeholder=\"Wann bist du Gekommen  HH:MM\" (keyup)=\"onKeyUp($event, kommzeit.value, pausezeit.value)\">\n\n<input class=\"abstand\" type=\"text\" #pausezeit placeholder=\"Pausen Zeit in Minuten\" (keyup)=\"onKeyUp($event, kommzeit.value, pausezeit.value)\">\n\n<button id=\"button1\" (click)=\"berechne(kommzeit.value, pausezeit.value)\" (keyup)=\"onKeyUp($event, kommzeit.value, pausezeit.value)\">Berechne</button>\n\n<label id=\"ergblable\" class=\"abstand\"></label>\n\n <button id=\"toggleButton\" (click)=\"toggleMode()\">Toggle Mode</button>\n\n</div>\n\n</body>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}